View(raw_riasec)
raw_riasec <- read.csv('RIASEC.csv',sep = '\t')
View(raw_riasec)
View(raw_riasec)
raw_riasec[realistic]
library(dplyr)
raw_riasec <- read.csv('RIASEC.csv',sep = '\t')
realistic <- c('R1','R2','R3','R4','R5','R6','R7','R8')
raw_realistic <- raw_realistic[realistic]
raw_realistic <- realistic[realistic]
,
,
raw_realistic <- raw_riasec[,realistic]
realistic <- raw_realistic[raw_realistic == -1]
realistic <- raw_realistic[,raw_realistic == -1]
realistic <- raw_realistic[raw_realistic == -1]
realistic <- raw_realistic[raw_realistic == -1]
realistic <- raw_realistic[raw_realistic == -1]
realistic_trait <- c('R1','R2','R3','R4','R5','R6','R7','R8')
realistic_trait <- c('R1','R2','R3','R4','R5','R6','R7','R8')
raw_riasec <- read.csv('RIASEC.csv',sep = '\t')
realistic_trait <- c('R1','R2','R3','R4','R5','R6','R7','R8')
raw_realistic <- raw_riasec[,realistic_trait]
realistic <- raw_realistic[raw_realistic == -1]
raw_riasec <- read.csv('RIASEC.csv',sep = '\t')
realistic_trait <- c('R1','R2','R3','R4','R5','R6','R7','R8')
raw_realistic <- raw_riasec[,realistic_trait]
realistic <- raw_realistic[raw_realistic == -1]
realistic <- raw_realistic[raw_realistic != -1]
realistic
?filter
library(dplyr)
library(dplyr)
?filter
summarise(raw_riasec)
summarise(raw_riasec)
raw_realistic %>%
filter(!= -1)
raw_realistic %>%
filter('R1' != -1)
names(raw_realistic)
raw_realistic %>%
filter(raw_realistic != -1)
1 !- 2
1 != 2
1 != 1
raw_realistic <- raw_riasec[,realistic_trait]
raw_realistic %>%
filter(R1* R2 * R3 * R4 * R5 * R6 * R7 * R8 < 0)
realistic <- raw_realistic %>%
filter(R1* R2 * R3 * R4 * R5 * R6 * R7 * R8 > 0)
View(realistic)
View(realistic)
rm(n)
rm(covariate.names)
rm(covariate.values)
summarise(realistic, n=n())
summarise(realistic
)
realistic %<>%
mutate(R_score = mean(R1, R2, R3, R4, R5, R6, R7, R8))
realistic %>%
mutate(R_score = mean(R1, R2, R3, R4, R5, R6, R7, R8)) %>%
.[['R_score']] %>%
-> realistic
realistic %>%
mutate(R_score = mean(R1, R2, R3, R4, R5, R6, R7, R8))
realistic %>%
rowwise() %>%
mutate(R_score = mean(c(R1, R2, R3, R4, R5, R6, R7, R8)))
realistic[1]
realistic[1,]
realistic[1:2,]
lm <- lm(R_score~R1, data = tr_realistic)
tr_realistic <- realistic[1:6500,]
lm <- lm(R_score~R1, data = tr_realistic)
realistic %>%
rowwise() %>%
mutate(R_score = mean(c(R1, R2, R3, R4, R5, R6, R7, R8)))
realistic %>%
rowwise() %>%
mutate(R_score = mean(c(R1, R2, R3, R4, R5, R6, R7, R8))) %>%
-> realistic
realistic %<>%
rowwise() %>%
mutate(R_score = mean(c(R1, R2, R3, R4, R5, R6, R7, R8))) %>%
# Generating the training set using the first 6500 people
tr_realistic <- realistic[1:6500,]
library(magrittr)
realistic %<>%
rowwise() %>%
mutate(R_score = mean(c(R1, R2, R3, R4, R5, R6, R7, R8))) %>%
# Generating the training set using the first 6500 people
tr_realistic <- realistic[1:6500,]
realistic %>%
rowwise() %>%
mutate(R_score = mean(c(R1, R2, R3, R4, R5, R6, R7, R8))) %>%
-> realistic
realistic <- realistic %>%
rowwise() %>%
mutate(R_score = mean(c(R1, R2, R3, R4, R5, R6, R7, R8)))
tr_realistic <- realistic[1:6500,]
lm <- lm(R_score~R1, data = tr_realistic)
RSS = sum(lm$residuals^2)
print(lm$coefficients)
reg.fn <- function(x) 1.0011862 + 0.4282061 * x
reg.fn(0)
realistic[1:2,]
realistic[1:3,]
realistic[3:4,]
realistic[8550:,]
realistic[8550:end,]
test <- realistic[1:3,]
test[2:-1,]
test
test[-(1:2),]
val_realistic <- realistic[-(1:6500),]
rm(test)
avg_RSS = mean(lm$residuals^2)
avg_RSS_tr = mean(lm$residuals^2)
rm(avg_RSS)
View(realistic)
View(realistic)
realistic <- realistic %>%
rowwise() %>%
mutate(Rscore = mean(c(R1, R2, R3, R4, R5, R6, R7, R8)))
tr_realistic <- realistic[1:6500,]
val_realistic <- realistic[-(1:6500),]
lm <- lm(R_score~R1, data = tr_realistic)
avg_RSS_tr = mean(lm$residuals^2)
print(lm$coefficients)
val_realistic %<>%
mutate(pred_Rscore = reg.fn(R1))
View(val_realistic)
View(val_realistic)
library(dplyr)
library(magrittr)
raw_riasec <- read.csv('RIASEC.csv',sep = '\t')
realistic_trait <- c('R1','R2','R3','R4','R5','R6','R7','R8')
raw_realistic <- raw_riasec[,realistic_trait]
realistic <- raw_realistic %>%
filter(R1* R2 * R3 * R4 * R5 * R6 * R7 * R8 > 0)
realistic <- realistic %>%
rowwise() %>%
mutate(Rscore = mean(c(R1, R2, R3, R4, R5, R6, R7, R8)))
tr_realistic <- realistic[1:6500,]
val_realistic <- realistic[-(1:6500),]
lm <- lm(R_score~R1, data = tr_realistic)
lm <- lm(Rscore~R1, data = tr_realistic)
avg_RSS_tr = mean(lm$residuals^2)
print(lm$coefficients)
reg.fn <- function(x) 1.0011862 + 0.4282061 * x
val_realistic %<>%
mutate(pred_Rscore = reg.fn(R1))
View(val_realistic)
val_realistic %<>%
mutate(pred_Rscore = reg.fn(R1),
residuals = reg.fn(R1) - Rscore )
View(val_realistic)
View(val_realistic)
avg_RSS_val = mean(val_realistic$residuals^2)
print (avg_RSS_tr)
print (avg_RSS_val)
test <- raw_realistic %<>%
filter(R1* R2 * R3 * R4 * R5 * R6 * R7 * R8 > 0)
rm(test)
?predict
predict(lm)
(car$MPG - predict(lm))^2
r <- (car$MPG - predict(lm))
length(car$MPG)
length(predict(lm))
lm <- lm(MPG~VOL+HP+SP+WT, data = car)
(car$MPG - predict(lm))^2
sum((car$MPG - predict(lm))^2)
lm <- lm(MPG~VOL+HP+SP+WT, data = car)
print(lm$coefficients)
RSS = sum(lm$residuals^2)
print(RSS)
names(car)
View(car)
View(car)
View(car)
rm(lm)
car <- read.csv('carmpgdat.csv')
lm_car <- lm(MPG~VOL+HP+SP+WT, data = car)
print(lm_car$coefficients)
RSS = sum(lm_car$residuals^2)
print(RSS)
leaps(x = car[,c('VOL','HP','SP','WT')], y = car[,'MPG'], names =c('VOL','HP','SP','WT'), method = 'Cp')
?regTermTest
??regTermTest
install.packages(survey)
install.packages('survey')
library(survey)
?regTermTest
covariates <-c('VOL','HP','SP','WT')
lm_car <- lm(MPG~., data = car)
covariates <-c('VOL','HP','SP','WT')
print(lm_car$coefficients)
lm_car <- lm(MPG~.-MAKE.MODEL, data = car)
covariates <-c('VOL','HP','SP','WT')
print(lm_car$coefficients)
lm_car <- lm(MPG~covariates, data = car)
print(lm_car$coefficients)
regTermTest(lm_car, covariates, null=NULL,df=Inf, method = "Wald")
covariates <-c('VOL','HP','SP','WT')
lm_car <- lm(MPG~covariates, data = car)
print(covariates)
covariates <-cbind('VOL','HP','SP','WT')
print(covariates)
lm_car <- lm(MPG~covariates, data = car)
lm_car <- lm(MPG~VOL+HP+SP+WT, data = car)
lm_car <- lm(MPG~VOL+HP+SP+WT, data = car)
print(lm_car$coefficients)
regTermTest(lm_car, covariates, null=NULL,df=Inf, method = "Wald")
regTermTest(lm_car, 'VOL', null=NULL,df=Inf, method = "Wald")
covariates <-c('VOL','HP','SP','WT')
covariates %>%
regTermTest(lm_car, covariates, null=NULL,df=Inf, method = "Wald")
test <- regTermTest(lm_car, 'VOL', null=NULL,df=Inf, method = "Wald")
test
names(car)
names(car) %>%
regTermTest(lm_car, covariates, null=NULL,df=Inf, method = "Wald")
regTermTest(lm_car, 'VOL', null=NULL,df=Inf, method = "Wald")
regTermTest(lm_car, 'HP', null=NULL,df=Inf, method = "Wald")
regTermTest(lm_car, 'SP', null=NULL,df=Inf, method = "Wald")
regTermTest(lm_car, 'WT', null=NULL,df=Inf, method = "Wald")
lm_1 <- lm(MPG ~ WT, data = car)
RSS_1 = sum(lm_1$residuals^2)
print (RSS_1)
lm_2 <- lm(MPG ~ WT + SP, data = car)
RSS_2 = sum(lm_2$residuals^2)
print (RSS_2)
lm_3 <- lm(MPG ~ WT + SP + HP, data = car)
RSS_3 = sum(lm_3$residuals^2)
print (RSS_3)
print(RSS)
N = 100000
I = function(u){X = rgamma(1.5,2.3); return(sum(1<X & X<2)/N)}
print(I)
I_hat <-I
rm(I_hat())
rm(I_hat
)
I(1)
I(2)
I()
N = 100000
I = function(u){X = rgamma(1.5,2.3); return(sum(1<X & X<2)/N)}
I()
?rgamma
N = 100000
I = function(u){X = rgamma(1.5,1/2.3); return(sum(1<X & X<2)/N)}
I()
N = 100000
I = function(u){X = rgamma(1.5,1/2.3,n = N); return(sum(1<X & X<2)/N)}
I()
B = 10000
se = sqrt(var(sapply(1:B,I)))
B <- 10000
se <- sqrt(var(sapply(1:B,I)))
rm(test)
sqrt(var(sapply(1:B,I)))
sqrt(4)
var(4)
sapply(1:10,I)
sapply(1:B,I)
B <- 10000
se <- sqrt(var(sapply(1:B,I)))
se
se_mc <- sqrt(var(sapply(1:N,I)))
se_mc
B <- 10000
base_sample <- rgamma(1.5,1/2.3,n = N)
I_bootstrap <- function(X){return(sum(1<X & X<2)/N)}
se_bootstrap <- sqrt(var(sapply(1:B,I_bootstrap(sample(base_sample, N, replace = TRUE)))))
I_bootstrap(sample(base_sample, N, replace = TRUE))
sapply(1:5,I_bootstrap(sample(base_sample, N, replace = TRUE)))
sapply(1:5,I)
?sapply
I_bootstrap <- function(X){X = sample(base_sample, N, replace = TRUE);return(sum(1<X & X<2)/N)}
se_bootstrap <- sqrt(var(sapply(1:B,I_bootstrap))
se_bootstrap <- sqrt(var(sapply(1:B,I_bootstrap)))
se_bootstrap
I
I()
library(leaps)
library(survey)
library(dplyr)
car <- read.csv('carmpgdat.csv')
lm_car <- lm(MPG~VOL+HP+SP+WT, data = car)
print(lm_car$coefficients)
RSS = sum(lm_car$residuals^2)
print(RSS)
regTermTest(lm_car, 'VOL', null=NULL,df=Inf, method = "Wald")
regTermTest(lm_car, 'HP', null=NULL,df=Inf, method = "Wald")
regTermTest(lm_car, 'SP', null=NULL,df=Inf, method = "Wald")
regTermTest(lm_car, 'WT', null=NULL,df=Inf, method = "Wald")
lm_1 <- lm(MPG ~ WT, data = car)
jhat_1 = sum(lm_1$residuals^2) + 1 * RSS * log(82)
print (jhat_1)
lm_2 <- lm(MPG ~ WT + SP, data = car)
jhat_2 = sum(lm_2$residuals^2) + 2 * RSS * log(82)
print (jhat_2)
lm_3 <- lm(MPG ~ WT + SP + HP, data = car)
jhat_3 = sum(lm_3$residuals^2) + 3 * RSS * log(82)
print (jhat_3)
jhat_4 = RSS + 4 * RSS * log(82)
print (jhat_4)
length(car)
nrow(car)
n <- nrow(car)
n <- nrow(car)
lm_1 <- lm(MPG ~ WT, data = car)
jhat_1 = sum(lm_1$residuals^2) + (1 * RSS/n * log(n))
print (jhat_1)
lm_2 <- lm(MPG ~ WT + SP, data = car)
jhat_2 = sum(lm_2$residuals^2) + (2 * RSS/n * log(n))
print (jhat_2)
lm_3 <- lm(MPG ~ WT + SP + HP, data = car)
jhat_3 = sum(lm_3$residuals^2) + (3 * RSS/n * log(n))
print (jhat_3)
jhat_4 = RSS + (4 * RSS/n * log(n))
print (jhat_4)
?extractAIC
lm_1 <- lm(MPG ~ WT, data = car)
jhat_1 = sum(lm_1$residuals^2) + (1 * RSS/(n-2) * log(n))
print (jhat_1)
lm_2 <- lm(MPG ~ WT + SP, data = car)
jhat_2 = sum(lm_2$residuals^2) + (2 * RSS/(n-2) * log(n))
print (jhat_2)
lm_3 <- lm(MPG ~ WT + SP + HP, data = car)
jhat_3 = sum(lm_3$residuals^2) + (3 * RSS/(n-2) * log(n))
print (jhat_3)
jhat_4 = RSS + (4 * RSS/(n-2) * log(n))
print (jhat_4)
lm_1 <- lm(MPG ~ WT, data = car)
jhat_1 = sum(lm_1$residuals^2) + (1 * RSS/(n-4) * log(n))
print (jhat_1)
lm_2 <- lm(MPG ~ WT + SP, data = car)
jhat_2 = sum(lm_2$residuals^2) + (2 * RSS/(n-4) * log(n))
print (jhat_2)
lm_3 <- lm(MPG ~ WT + SP + HP, data = car)
jhat_3 = sum(lm_3$residuals^2) + (3 * RSS/(n-4) * log(n))
print (jhat_3)
jhat_4 = RSS + (4 * RSS/(n-4) * log(n))
print (jhat_4)
step(lm_car,direction = 'backward', trace = True)
step(lm_car,direction = 'backward', trace = TRUE)
base <- lm(MPG~VOL, data = car)
step(base, scope = list(upper = lm_car, lower=~1), direction = 'forward', trace = TRUE)
base <- lm(MPG~HP, data = car)
step(base, scope = list(upper = lm_car, lower=~1), direction = 'forward', trace = TRUE)
base <- lm(MPG~SP, data = car)
step(base, scope = list(upper = lm_car, lower=~1), direction = 'forward', trace = TRUE)
base <- lm(MPG~WT, data = car)
step(base, scope = list(upper = lm_car, lower=~1), direction = 'forward', trace = TRUE)
I_bootstrap <- function(u){X = sample(base_sample, N, replace = TRUE);return(sum(1<X & X<2)/N)}
se_bootstrap <- sqrt(var(sapply(1:B,I_bootstrap)))
se_bootstrap
I_bootstrap <- function(X){X = sample(base_sample, N, replace = TRUE);return(sum(1<X & X<2)/N)}
se_bootstrap <- sqrt(var(sapply(1:B,I_bootstrap)))
se_bootstrap
B <- 10000
base_sample <- rgamma(1.5,1/2.3,n = N)
I_bootstrap <- function(u){X = sample(base_sample, N, replace = TRUE);return(sum(1<X & X<2)/N)}
se_bootstrap <- sqrt(var(sapply(1:B,I_bootstrap)))
se_bootstrap
se_bootstrap <- sqrt(var(sapply(1:B,I_bootstrap)))
se_bootstrap
se_bootstrap <- sqrt(var(sapply(1:B,I_bootstrap)))
se_bootstrap
se_bootstrap <- sqrt(var(sapply(1:B,I_bootstrap)))
se_bootstrap
length(base_sample)
sample(base_sample, N, replace = TRUE)
print(RSS)
coeff(lm_car)
coefficients(lm_car)
library(leaps)
N <- 100000
I <- function(u){X = rgamma(1.5,2.3,n = N); return(sum(1<X & X<2)/N)}
I_hat <- I
I_hat()
pgamma(1,1.5,2.3)
pgamma(2,1.5,2.3)-pgamma(1,1.5,2.3)
?gamma
?rgamma
se_mc <- sqrt(var(sapply(1:N,I)))
se_mc
B <- 10000
base_sample <- rgamma(1.5,1/2.3,n = N)
I_bootstrap <- function(u){X = sample(base_sample, N, replace = TRUE);return(sum(1<X & X<2)/N)}
se_bootstrap <- sqrt(var(sapply(1:B,I_bootstrap)))
se_bootstrap
library(dplyr)
library(magrittr)
raw_riasec <- read.csv('RIASEC.csv',sep = '\t')
library(dplyr)
library(magrittr)
raw_riasec <- read.csv('RIASEC.csv',sep = '\t')
realistic_trait <- c('R1','R2','R3','R4','R5','R6','R7','R8')
raw_realistic <- raw_riasec[,realistic_trait]
rows <- apply(raw_realistic, 1, function(x) !(-1 %in% x))
realistic <- raw_realistic[rows, 1]
# realistic <- raw_realistic %>%
#   filter(R1* R2 * R3 * R4 * R5 * R6 * R7 * R8 > 0)
# realistic <- raw_realistic %>%
#   filter(R1* R2 * R3 * R4 * R5 * R6 * R7 * R8 > 0)
# realistic <- raw_realistic %>%
#   filter(R1* R2 * R3 * R4 * R5 * R6 * R7 * R8 > 0)
# realistic <- raw_realistic %>%
#   filter(R1* R2 * R3 * R4 * R5 * R6 * R7 * R8 > 0)
realistic <- realistic %>%
rowwise() %>%
mutate(Rscore = mean(c(R1, R2, R3, R4, R5, R6, R7, R8)))
tr_realistic <- realistic[1:6500,]
val_realistic <- realistic[-(1:6500),]
library(dplyr)
library(magrittr)
raw_riasec <- read.csv('RIASEC.csv',sep = '\t')
realistic_trait <- c('R1','R2','R3','R4','R5','R6','R7','R8')
raw_realistic <- raw_riasec[,realistic_trait]
View(raw_realistic)
View(raw_realistic)
rows <- apply(raw_realistic, 1, function(x) !(-1 %in% x))
realistic <- raw_realistic[rows, 1]
realistic <- realistic %>%
rowwise() %>%
mutate(Rscore = mean(c(R1, R2, R3, R4, R5, R6, R7, R8)))
realistic <- raw_realistic[!raw_realistic == -1, ]
realistic <- realistic %>%
rowwise() %>%
mutate(Rscore = mean(c(R1, R2, R3, R4, R5, R6, R7, R8)))
tr_realistic <- realistic[1:6500,]
val_realistic <- realistic[-(1:6500),]
lm_riasec <- lm(Rscore~R1, data = tr_realistic)
avg_RSS_tr = mean(lm_riasec$residuals^2)
print(lm_riasec$coefficients)
library(dplyr)
library(magrittr)
raw_riasec <- read.csv('RIASEC.csv',sep = '\t')
realistic_trait <- c('R1','R2','R3','R4','R5','R6','R7','R8')
raw_realistic <- raw_riasec[,realistic_trait]
realistic <- raw_realistic[!raw_realistic == -1, ]
rm(raw_realistic)
library(dplyr)
library(magrittr)
raw_riasec <- read.csv('RIASEC.csv',sep = '\t')
realistic_trait <- c('R1','R2','R3','R4','R5','R6','R7','R8')
raw_realistic <- raw_riasec[,realistic_trait]
realistic <- raw_realistic[!raw_realistic == -1, ]
realistic <- raw_realistic[!raw_realistic == -1, ]
realistic <- raw_realistic[raw_realistic != -1, ]
rm(realistic)
raw_realistic <- raw_riasec[,realistic_trait]
realistic <- raw_realistic[raw_realistic != -1, ]
View(realistic)
View(realistic)
rm(realistic)
View(raw_realistic)
View(raw_realistic)
realistic <- raw_realistic %>%
filter(R1 > 0 &  R2 > 0 & R3 > 0 & R4 > 0 & R5 > 0 & R6 > 0 & R7 > 0 & R8 > 0)
realistic <- realistic %>%
rowwise() %>%
mutate(Rscore = mean(c(R1, R2, R3, R4, R5, R6, R7, R8)))
tr_realistic <- realistic[1:6500,]
val_realistic <- realistic[-(1:6500),]
lm_riasec <- lm(Rscore~R1, data = tr_realistic)
avg_RSS_tr = mean(lm_riasec$residuals^2)
print(lm_riasec$coefficients)
RSS_tr = lm_riasec$residuals^2
print(lm_riasec$coefficients)
print(RSS_tr)
RSS_tr = sum(lm_riasec$residuals^2)
print(RSS_tr)
reg.fn <- function(x) 1.0181052 + 0.4235993 * x
val_realistic %<>%
mutate(pred_Rscore = reg.fn(R1),
residuals = reg.fn(R1) - Rscore )
avg_RSS_val = mean(val_realistic$residuals^2)
avg_RSS_tr = mean(lm_riasec$residuals^2)
avg_RSS_val = mean(val_realistic$residuals^2)
print (avg_RSS_tr) # 0.4540176
print (avg_RSS_val) # 0.5376852
library(dplyr)
library(magrittr)
raw_riasec <- read.csv('RIASEC.csv',sep = '\t')
realistic_trait <- c('R1','R2','R3','R4','R5','R6','R7','R8')
raw_realistic <- raw_riasec[,realistic_trait]
realistic <- raw_realistic %>%
filter(R1 > 0 &  R2 > 0 & R3 > 0 & R4 > 0 & R5 > 0 & R6 > 0 & R7 > 0 & R8 > 0)
realistic <- realistic %>%
rowwise() %>%
mutate(Rscore = mean(c(R1, R2, R3, R4, R5, R6, R7, R8)))
tr_realistic <- realistic[1:6500,]
val_realistic <- realistic[-(1:6500),]
lm_riasec <- lm(Rscore~R1, data = tr_realistic)
RSS_tr = sum(lm_riasec$residuals^2)
print(RSS_tr)
print(lm_riasec$coefficients)
reg.fn <- function(x) 1.0181052 + 0.4235993 * x
val_realistic %<>%
mutate(pred_Rscore = reg.fn(R1),
residuals = reg.fn(R1) - Rscore )
avg_RSS_tr = mean(lm_riasec$residuals^2)
avg_RSS_val = mean(val_realistic$residuals^2)
print (avg_RSS_tr) # 0.4464676
print (avg_RSS_val) # 0.5201091
